name: Provision and Configure Minecraft Server

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Start EC2 Instance
      id: start_instance
      run: |
        aws configure set default.region us-west-2
        INSTANCE_STATE=$(aws ec2 describe-instances --instance-ids i-0ba311bacff7784d4 --query 'Reservations[0].Instances[0].State.Name' --output text)
        if [ "$INSTANCE_STATE" != "running" ]; then
          INSTANCE_ID=$(aws ec2 run-instances --image-id ami-01cd4de4363ab6ee8 --instance-type t3.small --key-name minecraft_key.pem --query 'Instances[0].InstanceId' --output text)
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          echo "::set-output name=instance_id::$INSTANCE_ID"
        else
          INSTANCE_ID=$(aws ec2 describe-instances --instance-ids i-0ba311bacff7784d4 --query 'Reservations[0].Instances[0].InstanceId' --output text)
          echo "::set-output name=instance_id::$INSTANCE_ID"
        fi


    - name: Get Instance Public IP
      id: public_ip
      run: |
        INSTANCE_IP=$(aws ec2 describe-instances --instance-ids ${{ steps.start_instance.outputs.instance_id }} --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
        echo "::set-output name=public_ip::$INSTANCE_IP"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    - name: Check Minecraft Server
      run: nmap -sV -Pn -p T:25565 ${{ steps.public_ip.outputs.public_ip }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
